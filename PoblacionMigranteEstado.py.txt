# Databricks notebook source
from pyspark.sql import SparkSession

# COMMAND ----------

df1 = spark.read.format("csv").option("header", "true").load("dbfs:/FileStore/shared_uploads/emarcellez@gmail.com/PoblaciónMigranteEstado.csv")

# COMMAND ----------

# Importar las bibliotecas
from pyspark.sql import SparkSession
from pyspark.sql.functions import col
from pyspark.sql import functions as F
from pyspark.sql.functions import col

# Inicializar SparkSession
spark = SparkSession.builder.appName("MedidasDeTendenciaCentral").getOrCreate()

df1 = df1.withColumnRenamed("2020", "col_2020")

# 1. Cálculo de la Media
media = df1.select(F.avg("col_2020")).collect()[0][0]
print(f"Media: {media}")

# Convertir la columna a tipo numérico
df1 = df1.withColumn("col_2020", col("col_2020").cast("float"))

# 2. Cálculo de la Mediana (utilizando percentiles)
mediana = df1.approxQuantile("col_2020", [0.5], 0)[0]
print(f"Mediana: {mediana}")

# 3. Cálculo de la Moda
# La moda es el valor más frecuente, por lo que podemos usar groupBy y count.
moda_df = df1.groupBy("col_2020").count().orderBy(F.desc("count"))
moda = moda_df.first()[0]
print(f"Moda: {moda}")


# COMMAND ----------

df1.show()

# COMMAND ----------

from pyspark.sql.functions import col

# Convertir la columna a tipo numérico (por ejemplo, FloatType)
df1 = df1.withColumn("col_2020", col("col_2020").cast("float"))


# COMMAND ----------

import matplotlib.pyplot as plt
import seaborn as sns
from pyspark.sql import functions as F
# 4. Crear un histograma para visualizar la distribución de los datos
# Convertir a Pandas para poder graficar con seaborn o matplotlib
df1_pd = df1.toPandas()
# Graficar el histograma
plt.figure(figsize=(10, 6))
sns.histplot(df1_pd['col_2020'], bins=10, kde=True, color="skyblue")
# Añadir las líneas para la media, mediana y moda
plt.axvline(media, color='red', linestyle='dashed', linewidth=2, label=f'Media: {media}')
plt.axvline(mediana, color='green', linestyle='dashed', linewidth=2, label=f'Mediana: {mediana}')
plt.axvline(moda, color='orange', linestyle='dashed', linewidth=2, label=f'Moda: {moda}')
# Añadir título y leyenda
plt.title('Histograma y Medidas de Tendencia Central', fontsize=14)
plt.legend()
plt.xlabel('Poblacion')
plt.ylabel('Frecuencia')
plt.tight_layout() 
plt.xticks(rotation=45)
# Mostrar el gráfico
plt.show()



# COMMAND ----------

plt.tight_layout() 

# COMMAND ----------

plt.show()

# COMMAND ----------

# Ordenar el DataFrame por la columna 'Poblacion_Migrante' de forma descendente
df_sorted = df1.orderBy(col('Col_2020').desc())

# Seleccionar los top 5 estados con más población migrante
top_5_estados = df_sorted.limit(5)

# Mostrar el resultado
top_5_estados.show()

# COMMAND ----------

# Calcular los cuantiles (Q1, Q2, Q3)
quantiles = df1.approxQuantile("Col_2020", [0.25, 0.5, 0.75], 0.05)

# Mostrar los cuantiles
print(f"Q1 (25th percentile): {quantiles[0]}")
print(f"Q2 (50th percentile / Median): {quantiles[1]}")
print(f"Q3 (75th percentile): {quantiles[2]}")
